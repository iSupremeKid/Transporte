<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Asistencium extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Asistencium_model');
    }

    /*
     * Listing of asistencia
     */
    function index()
    {
        $data['asistencia'] = $this->Asistencium_model->get_all_asistencia();

        $data['_view'] = 'asistencium/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new asistencium
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('usuario_id','Usuario Id','required',
    array('required' => 'Debe seleccionar un usuario para la asistencia.',
        )
  );
		$this->form_validation->set_rules('hora','Hora','required',
    array('required' => 'Debe agregar una hora para la asistencia.'
        )
  );

		if($this->form_validation->run())
        {
            $params = array(
				'usuario_id' => $this->input->post('usuario_id'),
				'hora' => $this->input->post('hora'),
				'estado' => 1,
            );

            $asistencium_id = $this->Asistencium_model->add_asistencium($params);
            redirect('asistencium/index');
        }
        else
        {
			$this->load->model('Usuario_model');
			$data['all_usuario'] = $this->Usuario_model->get_all_usuario();

            $data['_view'] = 'asistencium/add';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Editing a asistencium
     */
    function edit($id)
    {
        // check if the asistencium exists before trying to edit it
        $data['asistencium'] = $this->Asistencium_model->get_asistencium($id);

        if(isset($data['asistencium']['id']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('usuario_id','Usuario Id','required',
            array('required' => 'Debe seleccionar un usuario para la asistencia.',
                )
          );
        		$this->form_validation->set_rules('hora','Hora','required',
            array('required' => 'Debe agregar una hora para la asistencia.'
                )
          );

			if($this->form_validation->run())
            {
                $params = array(
					'usuario_id' => $this->input->post('usuario_id'),
					'hora' => $this->input->post('hora')
                );

                $this->Asistencium_model->update_asistencium($id,$params);
                redirect('asistencium/index');
            }
            else
            {
				$this->load->model('Usuario_model');
				$data['all_usuario'] = $this->Usuario_model->get_all_usuario();

                $data['_view'] = 'asistencium/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The asistencium you are trying to edit does not exist.');
    }

    /*
     * Deleting asistencium
     */
    function remove($id)
    {
        $asistencium = $this->Asistencium_model->get_asistencium($id);

        // check if the asistencium exists before trying to delete it
        if(isset($asistencium['id']))
        {
            $this->Asistencium_model->delete_asistencium($id);
            redirect('asistencium/index');
        }
        else
            show_error('The asistencium you are trying to delete does not exist.');
    }

    function deshabilitar($id){
      $data['asistencium'] = $this->Asistencium_model->get_asistencium($id);

      if(isset($data['asistencium']['id'])){
        $params = array('estado' => 0);
        $this->Asistencium_model->update_asistencium($id,$params);
        redirect('asistencium/index');
      }else{
        show_error('La asistencia que intenta deshabilitar no existe.');
      }

    }
    function habilitar($id){
      $data['asistencium'] = $this->Asistencium_model->get_asistencium($id);

      if(isset($data['asistencium']['id'])){
        $params = array('estado' => 1);
        $this->Asistencium_model->update_asistencium($id,$params);
        redirect('asistencium/index');
      }else{
        show_error('La asistencia que intenta habilitar no existe.');
      }
    }

}
