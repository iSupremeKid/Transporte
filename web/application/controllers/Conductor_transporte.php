<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Conductor_transporte extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Conductor_transporte_model');
    }

    /*
     * Listing of conductor_transporte
     */
    function index()
    {
        $data['conductor_transporte'] = $this->Conductor_transporte_model->get_all_conductor_transporte();

        $data['_view'] = 'conductor_transporte/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new conductor_transporte
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('transporte_unidad_id','Transporte Unidad Id','required',
    array('required' => 'Seleccione unidad de transporte.'
  ));
		$this->form_validation->set_rules('usuario_id','Usuario Id','required',
    array('required' => 'Seleccione el conductor.'
  ));
		$this->form_validation->set_rules('paradero_id','Paradero Id','required',
    array('required' => 'Seleccione el paradero.'
  ));
		$this->form_validation->set_rules('fecha','Fecha','required',
    array('required' => 'Seleccione la hora y fecha.'
  ));
		$this->form_validation->set_rules('tipo','Tipo','required',
    array('required' => 'Seleccione el tipo.'
  ));

		if($this->form_validation->run())
        {
            $params = array(
				'transporte_unidad_id' => $this->input->post('transporte_unidad_id'),
				'usuario_id' => $this->input->post('usuario_id'),
				'paradero_id' => $this->input->post('paradero_id'),
				'tipo' => $this->input->post('tipo'),
				'fecha' => $this->input->post('fecha'),
				'estado' => 1,
            );

            $conductor_transporte_id = $this->Conductor_transporte_model->add_conductor_transporte($params);
            redirect('conductor_transporte/index');
        }
        else
        {
			$this->load->model('Transporte_unidad_model');
			$data['all_transporte_unidad'] = $this->Transporte_unidad_model->get_all_transporte_unidad();

			$this->load->model('Usuario_model');
			$data['all_usuario'] = $this->Usuario_model->get_all_usuario();

			$this->load->model('Paradero_model');
			$data['all_paradero'] = $this->Paradero_model->get_all_paradero();

            $data['_view'] = 'conductor_transporte/add';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Editing a conductor_transporte
     */
    function edit($id)
    {
        // check if the conductor_transporte exists before trying to edit it
        $data['conductor_transporte'] = $this->Conductor_transporte_model->get_conductor_transporte($id);

        if(isset($data['conductor_transporte']['id']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('transporte_unidad_id','Transporte Unidad Id','required',
            array('required' => 'Seleccione unidad de transporte.'
          ));
        		$this->form_validation->set_rules('usuario_id','Usuario Id','required',
            array('required' => 'Seleccione el conductor.'
          ));
        		$this->form_validation->set_rules('paradero_id','Paradero Id','required',
            array('required' => 'Seleccione el paradero.'
          ));
        		$this->form_validation->set_rules('fecha','Fecha','required',
            array('required' => 'Seleccione la hora y fecha.'
          ));
        		$this->form_validation->set_rules('tipo','Tipo','required',
            array('required' => 'Seleccione el tipo.'
          ));

			if($this->form_validation->run())
            {
                $params = array(
					'transporte_unidad_id' => $this->input->post('transporte_unidad_id'),
					'usuario_id' => $this->input->post('usuario_id'),
					'paradero_id' => $this->input->post('paradero_id'),
					'tipo' => $this->input->post('tipo'),
					'fecha' => $this->input->post('fecha')
                );

                $this->Conductor_transporte_model->update_conductor_transporte($id,$params);
                redirect('conductor_transporte/index');
            }
            else
            {
				$this->load->model('Transporte_unidad_model');
				$data['all_transporte_unidad'] = $this->Transporte_unidad_model->get_all_transporte_unidad();

				$this->load->model('Usuario_model');
				$data['all_usuario'] = $this->Usuario_model->get_all_usuario();

				$this->load->model('Paradero_model');
				$data['all_paradero'] = $this->Paradero_model->get_all_paradero();

                $data['_view'] = 'conductor_transporte/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The conductor_transporte you are trying to edit does not exist.');
    }

    /*
     * Deleting conductor_transporte
     */
    function remove($id)
    {
        $conductor_transporte = $this->Conductor_transporte_model->get_conductor_transporte($id);

        // check if the conductor_transporte exists before trying to delete it
        if(isset($conductor_transporte['id']))
        {
            $this->Conductor_transporte_model->delete_conductor_transporte($id);
            redirect('conductor_transporte/index');
        }
        else
            show_error('The conductor_transporte you are trying to delete does not exist.');
    }

    function deshabilitar($id){
      $data['conductor_transporte'] = $this->Conductor_transporte_model->get_conductor_transporte($id);

      if(isset($data['conductor_transporte']['id'])){
        $params = array('estado' => 0);
        $this->Conductor_transporte_model->update_conductor_transporte($id,$params);
        redirect('conductor_transporte/index');
      }else{
        show_error('El conductor transporte que intenta deshabilitar no existe.');
      }

    }
    function habilitar($id){
      $data['conductor_transporte'] = $this->Conductor_transporte_model->get_conductor_transporte($id);

      if(isset($data['conductor_transporte']['id'])){
        $params = array('estado' => 1);
        $this->Conductor_transporte_model->update_conductor_transporte($id,$params);
        redirect('conductor_transporte/index');
      }else{
        show_error('El conductor transporte que intenta habilitar no existe.');
      }
    }

}
