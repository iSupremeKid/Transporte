<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Persona_viaje extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Persona_viaje_model');
    }

    /*
     * Listing of persona_viaje
     */
    function index()
    {
        $data['persona_viaje'] = $this->Persona_viaje_model->get_all_persona_viaje();

        $data['_view'] = 'persona_viaje/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new persona_viaje
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('persona_id','Persona Id','required',
    array('required' => 'Debe seleccionar la persona para el viaje.'
        )
  );
		$this->form_validation->set_rules('paradero_id','Paradero Id','required',
    array('required' => 'Debe seleccioanr el paradero para el viaje.'
        )
  );
		$this->form_validation->set_rules('transporte_unidad_id','Transporte Unidad Id','required',
    array('required' => 'Debe seleccionar la unidad de transporte para el viaje.'
        )
  );
		$this->form_validation->set_rules('persona_perfil_id','Persona Perfil Id','required',
    array('required' => 'Debe seleccionar el perfil de persona para el viaje.'
        )
  );
		$this->form_validation->set_rules('precio','Precio','required|numeric',
    array('required' => 'Debe agregar un precio para el viaje.'
        )
  );
		$this->form_validation->set_rules('fecha','Fecha','required',
    array('required' => 'Debe agregar la fecha para el viaje.'
        )
  );

		if($this->form_validation->run())
        {
            $params = array(
				'persona_id' => $this->input->post('persona_id'),
				'paradero_id' => $this->input->post('paradero_id'),
				'transporte_unidad_id' => $this->input->post('transporte_unidad_id'),
				'persona_perfil_id' => $this->input->post('persona_perfil_id'),
				'precio' => $this->input->post('precio'),
				'fecha' => $this->input->post('fecha'),
				'estado' => 1,
            );

            $persona_viaje_id = $this->Persona_viaje_model->add_persona_viaje($params);
            redirect('persona_viaje/index');
        }
        else
        {
			$this->load->model('Persona_model');
			$data['all_persona'] = $this->Persona_model->get_all_persona();

			$this->load->model('Paradero_model');
			$data['all_paradero'] = $this->Paradero_model->get_all_paradero();

			$this->load->model('Transporte_unidad_model');
			$data['all_transporte_unidad'] = $this->Transporte_unidad_model->get_all_transporte_unidad();

			$this->load->model('Persona_perfil_model');
			$data['all_persona_perfil'] = $this->Persona_perfil_model->get_all_persona_perfil();

            $data['_view'] = 'persona_viaje/add';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Editing a persona_viaje
     */
    function edit($id)
    {
        // check if the persona_viaje exists before trying to edit it
        $data['persona_viaje'] = $this->Persona_viaje_model->get_persona_viaje($id);

        if(isset($data['persona_viaje']['id']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('persona_id','Persona Id','required',
            array('required' => 'Debe seleccionar la persona para el viaje.'
                )
          );
        		$this->form_validation->set_rules('paradero_id','Paradero Id','required',
            array('required' => 'Debe seleccioanr el paradero para el viaje.'
                )
          );
        		$this->form_validation->set_rules('transporte_unidad_id','Transporte Unidad Id','required',
            array('required' => 'Debe seleccionar la unidad de transporte para el viaje.'
                )
          );
        		$this->form_validation->set_rules('persona_perfil_id','Persona Perfil Id','required',
            array('required' => 'Debe seleccionar el perfil de persona para el viaje.'
                )
          );
        		$this->form_validation->set_rules('precio','Precio','required|numeric',
            array('required' => 'Debe agregar un precio para el viaje.'
                )
          );
        		$this->form_validation->set_rules('fecha','Fecha','required',
            array('required' => 'Debe agregar la fecha para el viaje.'
                )
          );

			if($this->form_validation->run())
            {
                $params = array(
					'persona_id' => $this->input->post('persona_id'),
					'paradero_id' => $this->input->post('paradero_id'),
					'transporte_unidad_id' => $this->input->post('transporte_unidad_id'),
					'persona_perfil_id' => $this->input->post('persona_perfil_id'),
					'precio' => $this->input->post('precio'),
					'fecha' => $this->input->post('fecha')
                );

                $this->Persona_viaje_model->update_persona_viaje($id,$params);
                redirect('persona_viaje/index');
            }
            else
            {
				$this->load->model('Persona_model');
				$data['all_persona'] = $this->Persona_model->get_all_persona();

				$this->load->model('Paradero_model');
				$data['all_paradero'] = $this->Paradero_model->get_all_paradero();

				$this->load->model('Transporte_unidad_model');
				$data['all_transporte_unidad'] = $this->Transporte_unidad_model->get_all_transporte_unidad();

				$this->load->model('Persona_perfil_model');
				$data['all_persona_perfil'] = $this->Persona_perfil_model->get_all_persona_perfil();

                $data['_view'] = 'persona_viaje/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The persona_viaje you are trying to edit does not exist.');
    }

    /*
     * Deleting persona_viaje
     */
    function remove($id)
    {
        $persona_viaje = $this->Persona_viaje_model->get_persona_viaje($id);

        // check if the persona_viaje exists before trying to delete it
        if(isset($persona_viaje['id']))
        {
            $this->Persona_viaje_model->delete_persona_viaje($id);
            redirect('persona_viaje/index');
        }
        else
            show_error('The persona_viaje you are trying to delete does not exist.');
    }

    function deshabilitar($id){
      $data['persona_viaje'] = $this->Persona_viaje_model->get_persona_viaje($id);

      if(isset($data['persona_viaje']['id'])){
        $params = array('estado' => 0);
        $this->Persona_viaje_model->update_persona_viaje($id,$params);
        redirect('persona_viaje/index');
      }else{
        show_error('El persona viaje que intenta deshabilitar no existe.');
      }

    }
    function habilitar($id){
      $data['persona_viaje'] = $this->Persona_viaje_model->get_persona_viaje($id);

      if(isset($data['persona_viaje']['id'])){
        $params = array('estado' => 1);
        $this->Persona_viaje_model->update_persona_viaje($id,$params);
        redirect('persona_viaje/index');
      }else{
        show_error('El persona viaje que intenta habilitar no existe.');
      }
    }

}
