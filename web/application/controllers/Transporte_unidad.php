<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Transporte_unidad extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Transporte_unidad_model');
    }

    /*
     * Listing of transporte_unidad
     */
    function index()
    {
        $data['transporte_unidad'] = $this->Transporte_unidad_model->get_all_transporte_unidad();

        $data['_view'] = 'transporte_unidad/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new transporte_unidad
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('tipo_transporte_id','Tipo Transporte Id','required',
    array('required' => 'Tiene que elegir tipo de transporte.')
  );
		$this->form_validation->set_rules('identificacion','Identificacion','required|max_length[7]|is_unique[transporte_unidad.identificacion]',
    array('required' => 'Tiene que ingresar placa del vehÃ­culo.',
          'max_length' => 'Placa no puede exceder los 7 caracteres',
          'is_unique' => 'Placa ya ha sido registrada anteriormente.'
  ));

		if($this->form_validation->run())
        {
            $params = array(
				'tipo_transporte_id' => $this->input->post('tipo_transporte_id'),
				'identificacion' => strtoupper($this->input->post('identificacion')),
				'estado' => 1,
            );

            $transporte_unidad_id = $this->Transporte_unidad_model->add_transporte_unidad($params);
            redirect('transporte_unidad/index');
        }
        else
        {
			$this->load->model('Tipo_transporte_model');
			$data['all_tipo_transporte'] = $this->Tipo_transporte_model->get_all_tipo_transporte();

            $data['_view'] = 'transporte_unidad/add';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Editing a transporte_unidad
     */
    function edit($id)
    {
        // check if the transporte_unidad exists before trying to edit it
        $data['transporte_unidad'] = $this->Transporte_unidad_model->get_transporte_unidad($id);

        if(isset($data['transporte_unidad']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('tipo_transporte_id','Tipo Transporte Id','required',
      array('required' => 'Tiene que elegir tipo de transporte.')
    );
			$this->form_validation->set_rules('identificacion','Identificacion','required|max_length[7]|edit_unique[transporte_unidad.identificacion.'.$id.']',
      array('required' => 'Tiene que ingresar placa del vehÃ­culo.',
            'max_length' => 'Placa no puede exceder los 7 caracteres',
            'edit_unique' => 'Placa ya ha sido registrada anteriormente.'
            )
    );

			if($this->form_validation->run())
            {
                $params = array(
					'tipo_transporte_id' => $this->input->post('tipo_transporte_id'),
					'identificacion' => $this->input->post('identificacion'),
                );

                $this->Transporte_unidad_model->update_transporte_unidad($id,$params);
                redirect('transporte_unidad/index');
            }
            else
            {
				$this->load->model('Tipo_transporte_model');
				$data['all_tipo_transporte'] = $this->Tipo_transporte_model->get_all_tipo_transporte();

                $data['_view'] = 'transporte_unidad/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The transporte_unidad you are trying to edit does not exist.');
    }

    /*
     * Deleting transporte_unidad
     */
    function remove($id)
    {
        $transporte_unidad = $this->Transporte_unidad_model->get_transporte_unidad($id);

        // check if the transporte_unidad exists before trying to delete it
        if(isset($transporte_unidad['id']))
        {
            $this->Transporte_unidad_model->delete_transporte_unidad($id);
            redirect('transporte_unidad/index');
        }
        else
            show_error('The transporte_unidad you are trying to delete does not exist.');
    }


    function deshabilitar($id){
      $data['transporte_unidad'] = $this->Transporte_unidad_model->get_transporte_unidad($id);

      if(isset($data['transporte_unidad']['id'])){
        $params = array('estado' => 0);
        $this->Transporte_unidad_model->update_transporte_unidad($id,$params);
        redirect('transporte_unidad/index');
      }else{
        show_error('La unidad de transporte que intenta deshabilitar no existe.');
      }

    }
    function habilitar($id){
      $data['transporte_unidad'] = $this->Transporte_unidad_model->get_transporte_unidad($id);

      if(isset($data['transporte_unidad']['id'])){
        $params = array('estado' => 1);
        $this->Transporte_unidad_model->update_transporte_unidad($id,$params);
        redirect('transporte_unidad/index');
      }else{
        show_error('La unidad de transporte que intenta habilitar no existe.');
      }
    }

}
