<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Asistencium_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get asistencium by id
     */
    function get_asistencium($id)
    {
        return $this->db->get_where('asistencia',array('id'=>$id))->row_array();
    }

    /*
     * Lista las asistencias por usuario_id
     */
    function get_asistenciaPorUsuario($usuario_id){
      return $this->db->get_where('asistencia',array('usuario_id'=>$usuario_id))->result_array();
    }


    /*
     * Get all asistencia
     */
    function get_all_asistencia()
    {
        $this->db->select('as.*, usu.usuario as nombre_usuario');
        $this->db->from('asistencia as, usuario usu');
        $this->db->where('as.usuario_id = usu.id');
        $this->db->order_by('as.id', 'desc');
        return $this->db->get()->result_array();
    }

    function verifyAsistencia($user_id,$fecha){
        $this->db->select('*');
        $this->db->from('asistencia');
        $this->db->where("usuario_id = {$user_id} AND SUBSTRING(hora,1,10) = SUBSTRING('{$fecha}',1,10)");
        return $this->db->get()->row_array();
    }

    /*
     * function to add new asistencium
     */
    function add_asistencium($params)
    {
        $this->db->insert('asistencia',$params);
        return $this->db->insert_id();
    }

    /*
     * function to update asistencium
     */
    function update_asistencium($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('asistencia',$params);
    }

    /*
     * function to delete asistencium
     */
    function delete_asistencium($id)
    {
        return $this->db->delete('asistencia',array('id'=>$id));
    }
}
